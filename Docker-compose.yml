version: "3"
#Los nombres de los servicios funcionan como dominios, es decir; "http://client", "http://api", etc
#services es algo asi como un tipo de contenedor
services:
  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_PASSWORD=postgres_password
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    #el puerto dentro del container para nginx es el 80. esta configurado en el default.conf
    ports:
      - "3050:80"
  redis:
    image: "redis:latest"
  #api es el servidor express, funciona en el puerto 5000
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  #client es el servidor de desarrollo react, funciona en el puerto 3000. desde esta imagen se construye la version de produccion (en travis)
  client:
    #evitar el bug al iniciar el cliente react
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
#
